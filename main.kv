<ContentNavigationDrawer>

    MDList:
        MDNavigationDrawerHeader:
            title: "Ubraek App"
            text: ""
            source: "img/Ubraen.png"
            spacing: "4dp"
            padding: "12dp", 0, 0, "56dp"
        OneLineListItem:
            text: "Home"
            on_press:
                root.nav_drawer.set_state("close")
                root.screen_manager.current = "scr 1"
        OneLineListItem:
            text: "About Developers"
            on_press:
                root.nav_drawer.set_state("close")
                root.screen_manager.current = "scr 2"
        OneLineListItem:
            text: "System Description"
            on_press:
                root.nav_drawer.set_state("close")
                root.screen_manager.current = "scr 3"
        OneLineListItem:
            text: "System Help"
            on_press:
                root.nav_drawer.set_state("close")
                root.screen_manager.current = "scr 4"
        OneLineListItem:
            text: "Completed Tasks"
            on_press:
                root.nav_drawer.set_state("close")
                root.screen_manager.current = "scr 5"

MDScreen:

    MDTopAppBar:
        pos_hint: {"top": 1}
        elevation: 4
        title: "Ubraek"
        left_action_items: [["menu", lambda x: nav_drawer.set_state("open")]]
        
    MDNavigationLayout:

        MDScreenManager:
            id: screen_manager

            MDScreen:
                name: "scr 1"
                  
                ScrollView:
                    pos_hint: {'center_y': .5, 'center_x': .5}
                    size_hint: .9, .8

                    MDList:
                        id: container

                MDFloatingActionButton:
                    icon: 'plus-thick'
                    on_release: app.show_task_dialog()
                    elevation_normal: 12
                    pos_hint: {'x': .5 , 'y': .04}

                MDFloatingActionButton:
                    icon: 'logout'
                    on_release: app.logout_button()
                    elevation_normal: 12
                    pos_hint: {'x': .8, 'y': .04}
                    text_color: 1,1,1,1 

            MDScreen:
                name: "scr 2"

                MDLabel:
                    text: "[b]Dran Leynard Gamoso[/b]\n Developer 1\n"
                    halign: "center"
                    pos_hint: {'center_x': .5 , 'center_y': .65}
                    markup: True
                MDLabel:
                    text: "[b]Shanne Marie Cabotaje[/b]\n Developer 2"
                    halign: "center"
                    pos_hint: {'center_x': .5 , 'center_y': .6}
                    markup: True
                MDLabel:
                    text: """\nWe are [b]Dran Leynard Gamoso[/b] and [b]Shanne Marie Cabotaje[/b], two IT students who find ways to get things done. We've teamed up to create an app that helps us stay organized and focused, and we want to share it with our friends and students like us.  Our goal is to make productivy simple. We believe that even the smallest steps can lead to big achievements. Our app is here to help you take those steps every day. We think of productivity as a journey, not a race. """
                    halign: "center"
                    pos_hint: {'center_x': .5 , 'center_y': .5}
                    markup: True

            MDScreen:
                name: "scr 3"

                MDLabel:
                    text: "[b]System Description[/b]"
                    halign: "center"
                    pos_hint: {'center_x': .5 , 'center_y': .65}
                    markup: True
                MDLabel:
                    text: """This is a simple ToDo application built using the Kivy framework. The app allows users to create, mark as complete or incomplete, and delete tasks. It utilizes the KivyMD library for Material Design components. """
                    halign: "center"
                    pos_hint: {'center_x': .5 , 'center_y': .6}
                MDLabel:
                    text: "[b]Dependencies KivyMD[/b]\n - Material Design components for Kivy datetime \n - Basic date and time types"
                    halign: "center"
                    pos_hint: {'center_x': .5 , 'center_y': .5}
                    markup: True

            MDScreen:
                name: "scr 4"

                MDLabel:
                    text: "[b]System Help[/b]"
                    halign: "center"
                    pos_hint: {'center_x': .5 , 'center_y': .65}
                    markup: True
                MDLabel:
                    text: "If you need any help, please feel free to reach out to us."
                    halign: "center"
                    pos_hint: {'center_x': .5 , 'center_y': .6}

            MDScreen:
                name: "scr 5"
                
                ScrollView:
                    pos_hint: {'center_y': .5, 'center_x': .5}
                    size_hint: .9, .8

                    MDList:
                        id: container_completed

        MDNavigationDrawer:
            id: nav_drawer

            ContentNavigationDrawer:
                screen_manager: screen_manager
                nav_drawer: nav_drawer

<DialogContent>
    orientation: "vertical"
    spacing: "12dp"
    size_hint_y: None
    height: "300dp"
    padding: "20dp"

    MDTextField:
        id: task_text
        hint_text: "Task"
        helper_text: "Enter task here"
        helper_text_mode: "on_focus"
        size_hint_x: None
        width: "300dp"
        pos_hint: {'center_x': .5}

    MDTextField:
        id: date_text
        hint_text: "Due Date"
        size_hint_x: None
        width: "300dp"
        pos_hint: {'center_x': .5}

    MDRaisedButton:
        text: "Set Due Date"
        pos_hint: {'center_x': .5}
        on_release: root.show_date_picker()

    BoxLayout:
        size_hint_y: None
        height: self.minimum_height
        spacing: "12dp"
        padding: "20dp"

        MDRaisedButton:
            text: "CANCEL"
            on_release: app.close_dialog()

        MDRaisedButton:
            text: "ADD TASK"
            on_release:
                app.add_task(task_text, date_text.text)
                app.close_dialog()

<ListItemWithCheckbox>:
    id: the_list_item
    check: check
    on_release: self.parent.parent.set_current(self)
    CheckboxLeftWidget:
        id: check
        on_release: root.mark(check, root)
    IconRightWidget:
        icon: "delete"
        on_release: root.delete_item(root)
